//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Prueba.Cliente.SvcClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="M_Clients", Namespace="http://schemas.datacontract.org/2004/07/Prueba.Servicios.Modelos")]
    [System.SerializableAttribute()]
    public partial class M_Clients : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BusinessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SharedKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessId {
            get {
                return this.BusinessIdField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessIdField, value) != true)) {
                    this.BusinessIdField = value;
                    this.RaisePropertyChanged("BusinessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataAdded {
            get {
                return this.DataAddedField;
            }
            set {
                if ((this.DataAddedField.Equals(value) != true)) {
                    this.DataAddedField = value;
                    this.RaisePropertyChanged("DataAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SharedKey {
            get {
                return this.SharedKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SharedKeyField, value) != true)) {
                    this.SharedKeyField = value;
                    this.RaisePropertyChanged("SharedKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool State {
            get {
                return this.StateField;
            }
            set {
                if ((this.StateField.Equals(value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SvcClient.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/ObtenerTodos", ReplyAction="http://tempuri.org/IClient/ObtenerTodosResponse")]
        Prueba.Cliente.SvcClient.M_Clients[] ObtenerTodos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/ObtenerTodos", ReplyAction="http://tempuri.org/IClient/ObtenerTodosResponse")]
        System.Threading.Tasks.Task<Prueba.Cliente.SvcClient.M_Clients[]> ObtenerTodosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/ObtenerUno", ReplyAction="http://tempuri.org/IClient/ObtenerUnoResponse")]
        Prueba.Cliente.SvcClient.M_Clients ObtenerUno(string SharedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/ObtenerUno", ReplyAction="http://tempuri.org/IClient/ObtenerUnoResponse")]
        System.Threading.Tasks.Task<Prueba.Cliente.SvcClient.M_Clients> ObtenerUnoAsync(string SharedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Guardar", ReplyAction="http://tempuri.org/IClient/GuardarResponse")]
        bool Guardar(Prueba.Cliente.SvcClient.M_Clients Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Guardar", ReplyAction="http://tempuri.org/IClient/GuardarResponse")]
        System.Threading.Tasks.Task<bool> GuardarAsync(Prueba.Cliente.SvcClient.M_Clients Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Eliminar", ReplyAction="http://tempuri.org/IClient/EliminarResponse")]
        bool Eliminar(string SharedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Eliminar", ReplyAction="http://tempuri.org/IClient/EliminarResponse")]
        System.Threading.Tasks.Task<bool> EliminarAsync(string SharedKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Actualizar", ReplyAction="http://tempuri.org/IClient/ActualizarResponse")]
        bool Actualizar(Prueba.Cliente.SvcClient.M_Clients Client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/Actualizar", ReplyAction="http://tempuri.org/IClient/ActualizarResponse")]
        System.Threading.Tasks.Task<bool> ActualizarAsync(Prueba.Cliente.SvcClient.M_Clients Client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : Prueba.Cliente.SvcClient.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<Prueba.Cliente.SvcClient.IClient>, Prueba.Cliente.SvcClient.IClient {
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Prueba.Cliente.SvcClient.M_Clients[] ObtenerTodos() {
            return base.Channel.ObtenerTodos();
        }
        
        public System.Threading.Tasks.Task<Prueba.Cliente.SvcClient.M_Clients[]> ObtenerTodosAsync() {
            return base.Channel.ObtenerTodosAsync();
        }
        
        public Prueba.Cliente.SvcClient.M_Clients ObtenerUno(string SharedKey) {
            return base.Channel.ObtenerUno(SharedKey);
        }
        
        public System.Threading.Tasks.Task<Prueba.Cliente.SvcClient.M_Clients> ObtenerUnoAsync(string SharedKey) {
            return base.Channel.ObtenerUnoAsync(SharedKey);
        }
        
        public bool Guardar(Prueba.Cliente.SvcClient.M_Clients Client) {
            return base.Channel.Guardar(Client);
        }
        
        public System.Threading.Tasks.Task<bool> GuardarAsync(Prueba.Cliente.SvcClient.M_Clients Client) {
            return base.Channel.GuardarAsync(Client);
        }
        
        public bool Eliminar(string SharedKey) {
            return base.Channel.Eliminar(SharedKey);
        }
        
        public System.Threading.Tasks.Task<bool> EliminarAsync(string SharedKey) {
            return base.Channel.EliminarAsync(SharedKey);
        }
        
        public bool Actualizar(Prueba.Cliente.SvcClient.M_Clients Client) {
            return base.Channel.Actualizar(Client);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarAsync(Prueba.Cliente.SvcClient.M_Clients Client) {
            return base.Channel.ActualizarAsync(Client);
        }
    }
}
